package com.pegue.pague.api.entity;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.validation.Valid;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.pegue.pague.api.enums.TipoPessoa;

import lombok.Getter;
import lombok.Setter;
@Getter
@Setter
@Entity
public class Pessoa implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY) 
	private Long id_pessoa;
	@Enumerated(EnumType.STRING)
	private TipoPessoa tipoPessoa;	
	@Column(length = 200)
	private String nome;
	@Column(length = 200)
	private String nomeFantasia;
	@Column(length = 14)
	private String cpfCnpj;
	@Column(length = 200)
	private String email;
	@Column(length = 1)
	private String cliente;
	@Column(length = 1)
	private String transportadora;
	@Column(length = 1)
	private String usuario;
	@JsonIgnoreProperties("pessoa")
	@OneToOne(mappedBy = "pessoa",cascade = CascadeType.ALL)
	private Cliente clienteObject;
	@JsonIgnoreProperties("pessoa")
	@Valid
	@OneToMany(mappedBy = "pessoa", cascade = CascadeType.ALL, orphanRemoval = true)
	private List<Telefone> telefones;
	
	public Pessoa() {
	}

	public Pessoa(Long id_pessoa, TipoPessoa tipoPessoa, String nome, String nomeFantasia, String cpfCnpj, String email,
			String cliente, String transportadora, String usuario, Cliente clienteObject) {
		super();
		this.id_pessoa = id_pessoa;
		this.tipoPessoa = tipoPessoa;
		this.nome = nome;
		this.nomeFantasia = nomeFantasia;
		this.cpfCnpj = cpfCnpj;
		this.email = email;
		this.cliente = cliente;
		this.transportadora = transportadora;
		this.usuario = usuario;
		this.clienteObject = clienteObject;
		
	}
	
	

	@Override
	public String toString() {
		return "Pessoa [id_pessoa=" + id_pessoa + ", tipoPessoa=" + tipoPessoa + ", nome=" + nome + ", nomeFantasia="
				+ nomeFantasia + ", cpfCnpj=" + cpfCnpj + ", email=" + email + ", cliente=" + cliente
				+ ", transportadora=" + transportadora + ", usuario=" + usuario 
				+ ", telefones=" + telefones + "]";
	}

	public Long getId_pessoa() {
		return id_pessoa;
	}

	public void setId_pessoa(Long id_pessoa) {
		this.id_pessoa = id_pessoa;
	}

	public TipoPessoa getTipoPessoa() {
		return tipoPessoa;
	}

	public void setTipoPessoa(TipoPessoa tipoPessoa) {
		this.tipoPessoa = tipoPessoa;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getNomeFantasia() {
		return nomeFantasia;
	}

	public void setNomeFantasia(String nomeFantasia) {
		this.nomeFantasia = nomeFantasia;
	}

	public String getCpfCnpj() {
		return cpfCnpj;
	}

	public void setCpfCnpj(String cpfCnpj) {
		this.cpfCnpj = cpfCnpj;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getCliente() {
		return cliente;
	}

	public void setCliente(String cliente) {
		this.cliente = cliente;
	}

	public String getTransportadora() {
		return transportadora;
	}

	public void setTransportadora(String transportadora) {
		this.transportadora = transportadora;
	}

	public String getUsuario() {
		return usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}



	public List<Telefone> getTelefones() {
		if (this.telefones == null) {
			this.telefones = new ArrayList<>();
		}
		return telefones;
	}


	public void setTelefones(List<Telefone> telefones) {
		this.telefones = telefones;
	}

	@Override
	public int hashCode() {
		return Objects.hash(id_pessoa);
	}
	
	

	public Cliente getClienteObject() {
		return clienteObject;
	}

	public void setClienteObject(Cliente clienteObject) {
		this.clienteObject = clienteObject;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Pessoa other = (Pessoa) obj;
		return Objects.equals(id_pessoa, other.id_pessoa);
	}

	

	

}
